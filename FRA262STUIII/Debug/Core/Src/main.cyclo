std_abs.h:75:3:constexpr float std::abs(float)	1
cmath:463:3:constexpr float std::sqrt(float)	1
new:174:33:void* operator new(std::size_t, void*)	1
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	1
IndexedViewHelper.h:137:16:Eigen::internal::all_t::all_t()	1
main.cpp:414:6:void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef*, uint16_t)	10
main.cpp:461:6:void All_mode_UARTUI()	35
main.cpp:712:6:void xu_Uart()	1
main.cpp:717:6:void fn_Uart()	1
cmath:415:5:constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type std::pow(_Tp, _Up) [with _Tp = int; _Up = int]	1
main.cpp:727:5:int main()	18
main.cpp:947:6:void SystemClock_Config()	3
main.cpp:994:13:void MX_I2C1_Init()	2
main.cpp:1028:13:void MX_I2C3_Init()	2
main.cpp:1062:13:void MX_TIM4_Init()	6
main.cpp:1121:13:void MX_TIM10_Init()	2
main.cpp:1152:13:void MX_TIM11_Init()	2
main.cpp:1183:13:void MX_USART2_UART_Init()	2
main.cpp:1214:13:void MX_DMA_Init()	1
main.cpp:1235:13:void MX_GPIO_Init()	1
main.cpp:1317:6:void GrandStatumix()	35
main.cpp:1491:6:void LaserTrajex_workflow()	12
main.cpp:1573:6:void ResetParam()	2
main.cpp:1593:6:void Trajectory()	10
main.cpp:1703:6:void Unwrapping()	4
main.cpp:1725:6:void diffvelo()	3
main.cpp:1743:6:void Kalmanfilter()	2
main.cpp:1772:6:void PIDPosition()	2
main.cpp:1800:6:void PIDVelocity()	2
main.cpp:1824:6:void controlloop()	6
main.cpp:1874:6:void MotDrvCytron()	5
main.cpp:1905:10:uint16_t GraytoBinario(uint16_t, uint8_t)	3
main.cpp:1927:6:void IOExpenderInit()	1
main.cpp:1948:6:void AbsEncI2CReadx(uint8_t*)	5
main.cpp:1987:6:void Efft_activate()	7
main.cpp:2022:6:void Efft_read(uint8_t*)	6
main.cpp:2061:6:void HAL_GPIO_EXTI_Callback(uint16_t)	7
main.cpp:2108:10:uint64_t micros()	1
main.cpp:2110:10:uint32_t millis()	1
main.cpp:2113:6:void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef*)	3
main.cpp:2126:6:void Error_Handler()	1
SymbolicIndex.h:219:3:Eigen::symbolic::SymbolExpr<tag>::SymbolExpr() [with tag = Eigen::internal::symbolic_last_tag]	1
IntegralConstant.h:56:3:Eigen::internal::FixedInt<N>::FixedInt() [with int N = 1]	1
IntegralConstant.h:82:12:Eigen::internal::FixedInt<N> Eigen::internal::FixedInt<N>::operator()() const [with int N = 1]	1
SymbolicIndex.h:117:55:Eigen::symbolic::AddExpr<Derived, Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<M> > > Eigen::symbolic::BaseExpr<Derived>::operator+(Eigen::internal::FixedInt<M>) const [with int N = 1; Derived = Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>]	1
Macros.h:1073:69:void Eigen::internal::ignore_unused_variable(const T&) [with T = int]	1
Matrix.h:259:5:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
Matrix.h:259:5:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = float; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1]	1
Matrix.h:259:5:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
Matrix.h:259:5:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = float; int _Rows = 1; int _Cols = 3; int _Options = 1; int _MaxRows = 1; int _MaxCols = 3]	1
CommaInitializer.h:148:52:Eigen::CommaInitializer<Derived> Eigen::DenseBase<Derived>::operator<<(const Scalar&) [with Derived = Eigen::Matrix<float, 3, 3>]	1
CommaInitializer.h:105:10:Eigen::CommaInitializer<MatrixType>::~CommaInitializer() [with XprType = Eigen::Matrix<float, 3, 3>]	1
CommaInitializer.h:65:21:Eigen::CommaInitializer<MatrixType>& Eigen::CommaInitializer<MatrixType>::operator,(const Scalar&) [with XprType = Eigen::Matrix<float, 3, 3>]	2
CommaInitializer.h:148:52:Eigen::CommaInitializer<Derived> Eigen::DenseBase<Derived>::operator<<(const Scalar&) [with Derived = Eigen::Matrix<float, 3, 1>]	1
CommaInitializer.h:105:10:Eigen::CommaInitializer<MatrixType>::~CommaInitializer() [with XprType = Eigen::Matrix<float, 3, 1>]	1
CommaInitializer.h:65:21:Eigen::CommaInitializer<MatrixType>& Eigen::CommaInitializer<MatrixType>::operator,(const Scalar&) [with XprType = Eigen::Matrix<float, 3, 1>]	2
CommaInitializer.h:148:52:Eigen::CommaInitializer<Derived> Eigen::DenseBase<Derived>::operator<<(const Scalar&) [with Derived = Eigen::Matrix<float, 1, 1>]	1
CommaInitializer.h:105:10:Eigen::CommaInitializer<MatrixType>::~CommaInitializer() [with XprType = Eigen::Matrix<float, 1, 1>]	1
CommaInitializer.h:148:52:Eigen::CommaInitializer<Derived> Eigen::DenseBase<Derived>::operator<<(const Scalar&) [with Derived = Eigen::Matrix<float, 1, 3>]	1
CommaInitializer.h:105:10:Eigen::CommaInitializer<MatrixType>::~CommaInitializer() [with XprType = Eigen::Matrix<float, 1, 3>]	1
CommaInitializer.h:65:21:Eigen::CommaInitializer<MatrixType>& Eigen::CommaInitializer<MatrixType>::operator,(const Scalar&) [with XprType = Eigen::Matrix<float, 1, 3>]	2
DenseCoeffsBase.h:364:5:Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator()(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 1>]	4
CwiseNullaryOp.h:60:7:Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >::CwiseNullaryOp(const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >&)	1
commoncwisebinaryops.h:50:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>, const Derived, const typename Eigen::internal::plain_constant_type<Derived, typename Eigen::internal::promote_scalar_arg<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<typename Eigen::internal::traits<T>::Scalar, T, Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, T> > >::value>::type>::type> Eigen::MatrixBase<Derived>::operator*(const T&) const [with T = float; Derived = Eigen::Matrix<float, 3, 1>]	1
Transpose.h:182:1:Eigen::Transpose<Derived> Eigen::DenseBase<Derived>::transpose() [with Derived = Eigen::Matrix<float, 3, 1>]	1
CwiseBinaryOp.h:77:7:Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >::CwiseBinaryOp(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >&)	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
Matrix.h:223:33:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; Derived = Eigen::Matrix<float, 3, 3>]	1
Matrix.h:223:33:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::Matrix<float, 3, 3>]	1
Transpose.h:182:1:Eigen::Transpose<Derived> Eigen::DenseBase<Derived>::transpose() [with Derived = Eigen::Matrix<float, 3, 3>]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
commoncwisebinaryops.h:27:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>]	1
Matrix.h:223:33:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
Transpose.h:182:1:Eigen::Transpose<Derived> Eigen::DenseBase<Derived>::transpose() [with Derived = Eigen::Matrix<float, 1, 3>]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; Derived = Eigen::Matrix<float, 3, 3>]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::Matrix<float, 1, 3>]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
commoncwisebinaryops.h:27:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 1, 1>; Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
CwiseBinaryOp.h:77:7:Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >::CwiseBinaryOp(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >&)	1
InverseImpl.h:348:31:const Eigen::Inverse<Derived> Eigen::MatrixBase<Derived>::inverse() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
Inverse.h:43:7:Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >::Inverse(const Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >&)	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
Matrix.h:223:33:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; Derived = Eigen::Matrix<float, 1, 3>]	1
commoncwisebinaryops.h:19:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>; Derived = Eigen::Matrix<float, 1, 1>]	1
CwiseBinaryOp.h:77:7:Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >::CwiseBinaryOp(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >&)	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 3, 1>]	1
Product.h:71:7:Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>::Product(const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>&)	1
commoncwisebinaryops.h:27:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator+(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
Matrix.h:223:33:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 1, 3>; Derived = Eigen::Matrix<float, 3, 1>]	1
commoncwisebinaryops.h:19:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::operator-(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
CwiseBinaryOp.h:77:7:Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >::CwiseBinaryOp(const Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >&)	1
GeneralProduct.h:399:1:const Eigen::Product<Derived, OtherDerived> Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >]	1
Matrix.h:223:33:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
SymbolicIndex.h:80:18:const Derived& Eigen::symbolic::BaseExpr<Derived>::derived() const [with Derived = Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>]	1
SymbolicIndex.h:66:3:Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<N> >::ValueExpr() [with int N = 1]	1
SymbolicIndex.h:254:3:Eigen::symbolic::AddExpr<Arg1, Arg2>::AddExpr(const Arg0&, const Arg1&) [with Arg0 = Eigen::symbolic::SymbolExpr<Eigen::internal::symbolic_last_tag>; Arg1 = Eigen::symbolic::ValueExpr<Eigen::internal::FixedInt<1> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Matrix<float, 3, 3>]	1
PlainObjectBase.h:476:25:Eigen::PlainObjectBase<Derived>::PlainObjectBase() [with Derived = Eigen::Matrix<float, 3, 3>]	1
PlainObjectBase.h:968:37:static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<float, 3, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Matrix<float, 1, 1>]	1
PlainObjectBase.h:476:25:Eigen::PlainObjectBase<Derived>::PlainObjectBase() [with Derived = Eigen::Matrix<float, 1, 1>]	1
PlainObjectBase.h:968:37:static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<float, 1, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:476:25:Eigen::PlainObjectBase<Derived>::PlainObjectBase() [with Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:968:37:static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<float, 3, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Matrix<float, 1, 3>]	1
PlainObjectBase.h:476:25:Eigen::PlainObjectBase<Derived>::PlainObjectBase() [with Derived = Eigen::Matrix<float, 1, 3>]	1
PlainObjectBase.h:968:37:static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<float, 1, 3>]	1
CommaInitializer.h:33:10:Eigen::CommaInitializer<MatrixType>::CommaInitializer(XprType&, const Scalar&) [with XprType = Eigen::Matrix<float, 3, 3>]	2
CommaInitializer.h:121:19:XprType& Eigen::CommaInitializer<MatrixType>::finished() [with XprType = Eigen::Matrix<float, 3, 3>]	3
PlainObjectBase.h:145:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
PlainObjectBase.h:143:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
PlainObjectBase.h:175:33:Eigen::PlainObjectBase<Derived>::Scalar& Eigen::PlainObjectBase<Derived>::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 3>]	1
CommaInitializer.h:33:10:Eigen::CommaInitializer<MatrixType>::CommaInitializer(XprType&, const Scalar&) [with XprType = Eigen::Matrix<float, 3, 1>]	2
CommaInitializer.h:121:19:XprType& Eigen::CommaInitializer<MatrixType>::finished() [with XprType = Eigen::Matrix<float, 3, 1>]	3
PlainObjectBase.h:145:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:143:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:175:33:Eigen::PlainObjectBase<Derived>::Scalar& Eigen::PlainObjectBase<Derived>::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 1>]	1
CommaInitializer.h:33:10:Eigen::CommaInitializer<MatrixType>::CommaInitializer(XprType&, const Scalar&) [with XprType = Eigen::Matrix<float, 1, 1>]	2
CommaInitializer.h:121:19:XprType& Eigen::CommaInitializer<MatrixType>::finished() [with XprType = Eigen::Matrix<float, 1, 1>]	3
CommaInitializer.h:33:10:Eigen::CommaInitializer<MatrixType>::CommaInitializer(XprType&, const Scalar&) [with XprType = Eigen::Matrix<float, 1, 3>]	2
CommaInitializer.h:121:19:XprType& Eigen::CommaInitializer<MatrixType>::finished() [with XprType = Eigen::Matrix<float, 1, 3>]	3
PlainObjectBase.h:145:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
PlainObjectBase.h:143:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
PlainObjectBase.h:175:33:Eigen::PlainObjectBase<Derived>::Scalar& Eigen::PlainObjectBase<Derived>::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 1, 3>]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:163:8:Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 1> > >::~evaluator()	1
CoreEvaluators.h:273:8:Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >::~evaluator()	1
DenseCoeffsBase.h:342:33:Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 1>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
NullaryFunctors.h:20:41:Eigen::internal::scalar_constant_op<Scalar>::scalar_constant_op(const Scalar&) [with Scalar = float]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CwiseNullaryOp.h:68:5:Eigen::CwiseNullaryOp<NullaryOp, MatrixType>::CwiseNullaryOp(Eigen::Index, Eigen::Index, const NullaryOp&) [with NullaryOp = Eigen::internal::scalar_constant_op<float>; PlainObjectType = const Eigen::Matrix<float, 3, 1>]	4
BinaryFunctors.h:74:3:Eigen::internal::scalar_product_op<LhsScalar, RhsScalar>::scalar_product_op() [with LhsScalar = float; RhsScalar = float]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >, Eigen::Dense>::CwiseBinaryOpImpl()	1
CwiseNullaryOp.h:78:11:constexpr Eigen::Index Eigen::CwiseNullaryOp<NullaryOp, MatrixType>::rows() const [with NullaryOp = Eigen::internal::scalar_constant_op<float>; PlainObjectType = const Eigen::Matrix<float, 3, 1>]	1
CwiseNullaryOp.h:80:11:constexpr Eigen::Index Eigen::CwiseNullaryOp<NullaryOp, MatrixType>::cols() const [with NullaryOp = Eigen::internal::scalar_constant_op<float>; PlainObjectType = const Eigen::Matrix<float, 3, 1>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	2
NullaryFunctors.h:19:41:Eigen::internal::scalar_constant_op<Scalar>::scalar_constant_op(const Eigen::internal::scalar_constant_op<Scalar>&) [with Scalar = float]	1
BinaryFunctors.h:74:3:Eigen::internal::scalar_product_op<LhsScalar, RhsScalar>::scalar_product_op(const Eigen::internal::scalar_product_op<LhsScalar, RhsScalar>&) [with LhsScalar = float; RhsScalar = float]	1
EigenBase.h:46:12:Derived& Eigen::EigenBase<Derived>::derived() [with Derived = Eigen::Matrix<float, 3, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0, Eigen::Dense>::ProductImpl()	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 0]	1
PlainObjectBase.h:777:34:Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
PlainObjectBase.h:777:34:Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
EigenBase.h:46:12:Derived& Eigen::EigenBase<Derived>::derived() [with Derived = Eigen::Matrix<float, 3, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0, Eigen::Dense>::ProductImpl()	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 0]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>]	1
BinaryFunctors.h:36:3:Eigen::internal::scalar_sum_op<LhsScalar, RhsScalar>::scalar_sum_op() [with LhsScalar = float; RhsScalar = float]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 0]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; RhsType = const Eigen::Matrix<float, 3, 3>]	2
BinaryFunctors.h:36:3:Eigen::internal::scalar_sum_op<LhsScalar, RhsScalar>::scalar_sum_op(const Eigen::internal::scalar_sum_op<LhsScalar, RhsScalar>&) [with LhsScalar = float; RhsScalar = float]	1
PlainObjectBase.h:777:34:Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >; Derived = Eigen::Matrix<float, 3, 3>]	1
EigenBase.h:46:12:Derived& Eigen::EigenBase<Derived>::derived() [with Derived = Eigen::Matrix<float, 1, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0, Eigen::Dense>::ProductImpl()	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
Product.h:126:7:Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0, 6>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0, Eigen::Dense>::ProductImpl()	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
PlainObjectBase.h:143:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
PlainObjectBase.h:145:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; RhsType = const Eigen::Matrix<float, 1, 1>]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; RhsType = const Eigen::Matrix<float, 1, 1>]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; RhsType = const Eigen::Matrix<float, 1, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >]	1
Inverse.h:68:7:Eigen::InverseImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >, Eigen::Dense>::InverseImpl()	1
Inverse.h:53:30:Eigen::Inverse<XprType>::Inverse(const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0, Eigen::Dense>::ProductImpl()	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
Inverse.h:57:44:constexpr Eigen::Index Eigen::Inverse<XprType>::rows() const [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 0]	1
PlainObjectBase.h:777:34:Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
Product.h:126:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0, 6>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
BinaryFunctors.h:353:3:Eigen::internal::scalar_difference_op<LhsScalar, RhsScalar>::scalar_difference_op() [with LhsScalar = float; RhsScalar = float]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 1, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	2
BinaryFunctors.h:353:3:Eigen::internal::scalar_difference_op<LhsScalar, RhsScalar>::scalar_difference_op(const Eigen::internal::scalar_difference_op<LhsScalar, RhsScalar>&) [with LhsScalar = float; RhsScalar = float]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0, Eigen::Dense>::ProductImpl()	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 1, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 0]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 0]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>]	2
PlainObjectBase.h:777:34:Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; Derived = Eigen::Matrix<float, 3, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 0]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 0]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 3>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0, Eigen::Dense>::ProductImpl()	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 3>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
PlainObjectBase.h:777:34:Derived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Matrix<float, 3, 3>]	1
DenseStorage.h:211:23:Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::DenseStorage() [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 0]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Matrix<float, 1, 1>]	1
DenseStorage.h:211:23:Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::DenseStorage() [with T = float; int Size = 1; int _Rows = 1; int _Cols = 1; int _Options = 0]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Matrix<float, 3, 1>]	1
DenseStorage.h:211:23:Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::DenseStorage() [with T = float; int Size = 3; int _Rows = 3; int _Cols = 1; int _Options = 0]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Matrix<float, 1, 3>]	1
DenseStorage.h:211:23:Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::DenseStorage() [with T = float; int Size = 3; int _Rows = 1; int _Cols = 3; int _Options = 1]	1
DenseStorage.h:263:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::cols() [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 0]	1
DenseStorage.h:262:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::rows() [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 0]	1
DenseStorage.h:267:26:T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 0]	1
DenseStorage.h:263:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::cols() [with T = float; int Size = 3; int _Rows = 3; int _Cols = 1; int _Options = 0]	1
DenseStorage.h:262:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::rows() [with T = float; int Size = 3; int _Rows = 3; int _Cols = 1; int _Options = 0]	1
DenseStorage.h:267:26:T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() [with T = float; int Size = 3; int _Rows = 3; int _Cols = 1; int _Options = 0]	1
PlainObjectBase.h:175:33:Eigen::PlainObjectBase<Derived>::Scalar& Eigen::PlainObjectBase<Derived>::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 1, 1>]	1
DenseStorage.h:263:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::cols() [with T = float; int Size = 3; int _Rows = 1; int _Cols = 3; int _Options = 1]	1
DenseStorage.h:262:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::rows() [with T = float; int Size = 3; int _Rows = 1; int _Cols = 3; int _Options = 1]	1
DenseStorage.h:267:26:T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() [with T = float; int Size = 3; int _Rows = 1; int _Cols = 3; int _Options = 1]	1
CoreEvaluators.h:282:12:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator(const XprType&) [with Scalar = float; int Rows = 3; int Cols = 1; int Options = 0; int MaxRows = 3; int MaxCols = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:217:11:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::Scalar& Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 1>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
XprHelper.h:133:52:Eigen::internal::variable_if_dynamic<T, Value>::variable_if_dynamic(T) [with T = int; int Value = 3]	1
XprHelper.h:133:52:Eigen::internal::variable_if_dynamic<T, Value>::variable_if_dynamic(T) [with T = int; int Value = 1]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
XprHelper.h:135:7:static constexpr T Eigen::internal::variable_if_dynamic<T, Value>::value() [with T = int; int Value = 3]	1
XprHelper.h:135:7:static constexpr T Eigen::internal::variable_if_dynamic<T, Value>::value() [with T = int; int Value = 1]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>]	1
AssignEvaluator.h:834:6:void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
AssignEvaluator.h:834:6:void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	1
AssignEvaluator.h:834:6:void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
DenseStorage.h:262:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::rows() [with T = float; int Size = 1; int _Rows = 1; int _Cols = 1; int _Options = 0]	1
DenseStorage.h:263:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::cols() [with T = float; int Size = 1; int _Rows = 1; int _Cols = 1; int _Options = 0]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>]	1
AssignEvaluator.h:834:6:void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 1, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >]	1
AssignEvaluator.h:834:6:void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>]	1
AssignEvaluator.h:834:6:void Eigen::internal::call_assignment(Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>]	1
DenseStorage.h:49:3:Eigen::internal::plain_array<T, Size, MatrixOrArrayOptions, Alignment>::plain_array() [with T = float; int Size = 9; int MatrixOrArrayOptions = 0; int Alignment = 0]	1
DenseStorage.h:49:3:Eigen::internal::plain_array<T, Size, MatrixOrArrayOptions, Alignment>::plain_array() [with T = float; int Size = 1; int MatrixOrArrayOptions = 0; int Alignment = 0]	1
DenseStorage.h:49:3:Eigen::internal::plain_array<T, Size, MatrixOrArrayOptions, Alignment>::plain_array() [with T = float; int Size = 3; int MatrixOrArrayOptions = 0; int Alignment = 0]	1
DenseStorage.h:49:3:Eigen::internal::plain_array<T, Size, MatrixOrArrayOptions, Alignment>::plain_array() [with T = float; int Size = 3; int MatrixOrArrayOptions = 1; int Alignment = 0]	1
DenseStorage.h:267:26:T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() [with T = float; int Size = 1; int _Rows = 1; int _Cols = 1; int _Options = 0]	1
CoreEvaluators.h:195:12:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator(const PlainObjectType&) [with Derived = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:147:9:constexpr Eigen::Index Eigen::internal::plainobjectbase_evaluator_data<Scalar, OuterStride>::outerStride() const [with Scalar = float; int OuterStride = 0]	1
AssignmentFunctors.h:23:3:Eigen::internal::assign_op<DstScalar, SrcScalar>::assign_op() [with DstScalar = float; SrcScalar = float]	1
AssignEvaluator.h:848:6:void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:848:6:void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:856:6:void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<(! Eigen::internal::evaluator_assume_aliasing<Src>::value), void*>::type) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:848:6:void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:848:6:void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:848:6:void Eigen::internal::call_assignment(Dst&, const Src&, const Func&, typename Eigen::internal::enable_if<Eigen::internal::evaluator_assume_aliasing<Src>::value, void*>::type) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>]	1
DenseStorage.h:29:6:void Eigen::internal::check_static_allocation_size() [with T = float; int Size = 9]	1
DenseStorage.h:29:6:void Eigen::internal::check_static_allocation_size() [with T = float; int Size = 1]	1
DenseStorage.h:29:6:void Eigen::internal::check_static_allocation_size() [with T = float; int Size = 3]	1
PlainObjectBase.h:247:57:const Scalar* Eigen::PlainObjectBase<Derived>::data() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:139:3:Eigen::internal::plainobjectbase_evaluator_data<Scalar, OuterStride>::plainobjectbase_evaluator_data(const Scalar*, Eigen::Index) [with Scalar = float; int OuterStride = 0]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Matrix<float, 3, 3>; Func = Eigen::internal::assign_op<float, float>]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Matrix<float, 3, 1>; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >; Func = Eigen::internal::assign_op<float, float>]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
DenseStorage.h:266:32:const T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() const [with T = float; int Size = 3; int _Rows = 3; int _Cols = 1; int _Options = 0]	1
Matrix.h:429:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::outerStride() const [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Matrix<float, 3, 3>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Matrix<float, 3, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
DenseBase.h:235:11:constexpr Eigen::Index Eigen::DenseBase<Derived>::innerSize() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Matrix<float, 3, 3>]	4
CoreEvaluators.h:163:8:Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3> > >::~evaluator()	1
CoreEvaluators.h:273:8:Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Matrix<float, 3, 3>; Functor = Eigen::internal::assign_op<float, float>]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Matrix<float, 3, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	4
CoreEvaluators.h:163:8:Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3, 1, 3, 3> > >::~evaluator()	1
CoreEvaluators.h:273:8:Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >::~evaluator()	1
ProductEvaluators.h:96:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Matrix<float, 3, 3> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >; Functor = Eigen::internal::assign_op<float, float>]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
EigenBase.h:67:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::size() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 0>; Func = Eigen::internal::assign_op<float, float>]	1
Transpose.h:446:17:static void Eigen::internal::checkTransposeAliasing_impl<Derived, OtherDerived, false>::run(const Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<float, 3, 3>; OtherDerived = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:282:12:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator(const XprType&) [with Scalar = float; int Rows = 3; int Cols = 3; int Options = 0; int MaxRows = 3; int MaxCols = 3]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Matrix<float, 3, 3>; T1 = float; T2 = float]	5
EigenBase.h:52:19:Derived& Eigen::EigenBase<Derived>::const_cast_derived() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 0>; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Matrix<float, 3, 1>; T1 = float; T2 = float]	5
EigenBase.h:52:19:Derived& Eigen::EigenBase<Derived>::const_cast_derived() const [with Derived = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
Transpose.h:446:17:static void Eigen::internal::checkTransposeAliasing_impl<Derived, OtherDerived, false>::run(const Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<float, 3, 3>; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; Rhs = const Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; RhsType = const Eigen::Matrix<float, 3, 3>]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; RhsType = const Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:356:53:static void Eigen::internal::dense_assignment_loop<Kernel, 0, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 0>; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 0]	1
ProductEvaluators.h:141:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Options = 0; Scalar = float]	4
CoreEvaluators.h:195:12:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator(const PlainObjectType&) [with Derived = Eigen::Matrix<float, 3, 3>]	1
PlainObjectBase.h:271:30:void Eigen::PlainObjectBase<Derived>::resize(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 3>]	4
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 9]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
ProductEvaluators.h:141:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 1>; int Options = 0; Scalar = float]	4
PlainObjectBase.h:271:30:void Eigen::PlainObjectBase<Derived>::resize(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 1>]	4
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 3]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; Rhs = const Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 9]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 0]	1
ProductEvaluators.h:141:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Options = 0; Scalar = float]	4
ProductEvaluators.h:221:8:static void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0> >; InitialFunc = Eigen::internal::assign_op<float, float>; DstXprType = Eigen::Matrix<float, 3, 1>; OtherXpr = Eigen::Matrix<float, 3, 1>; ProductType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>; Func1 = Eigen::internal::assign_op<float, float>; Func2 = Eigen::internal::add_assign_op<float, float>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
ProductEvaluators.h:141:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 0; Scalar = float]	4
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
PlainObjectBase.h:247:57:const Scalar* Eigen::PlainObjectBase<Derived>::data() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
DenseCoeffsBase.h:585:18:constexpr Eigen::Index Eigen::DenseCoeffsBase<Derived, 3>::outerStride() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:139:3:Eigen::internal::plainobjectbase_evaluator_data<Scalar, OuterStride>::plainobjectbase_evaluator_data(const Scalar*, Eigen::Index) [with Scalar = float; int OuterStride = 3]	1
DenseStorage.h:265:28:void Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::resize(Eigen::Index, Eigen::Index, Eigen::Index) [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 0]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 9]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 1>]	1
DenseStorage.h:265:28:void Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::resize(Eigen::Index, Eigen::Index, Eigen::Index) [with T = float; int Size = 3; int _Rows = 3; int _Cols = 1; int _Options = 0]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 3]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; Rhs = const Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:664:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 9]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
Inverse.h:58:44:constexpr Eigen::Index Eigen::Inverse<XprType>::cols() const [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>]	1
AssignmentFunctors.h:48:3:Eigen::internal::add_assign_op<DstScalar, SrcScalar>::add_assign_op() [with DstScalar = float; SrcScalar = float]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 0>; Func = Eigen::internal::add_assign_op<float, float>]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 3>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>; Func = Eigen::internal::assign_op<float, float>]	1
DenseStorage.h:266:32:const T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() const [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 0]	1
Matrix.h:429:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::outerStride() const [with _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
CoreEvaluators.h:226:11:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::Scalar& Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeffRef(Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:211:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 3>]	1
AssignmentFunctors.h:24:46:void Eigen::internal::assign_op<DstScalar, SrcScalar>::assignCoeff(DstScalar&, const SrcScalar&) const [with DstScalar = float; SrcScalar = float]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 9]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>; Func = Eigen::internal::assign_op<float, float>]	1
CoreEvaluators.h:226:11:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::Scalar& Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeffRef(Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:211:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 3]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; RhsType = const Eigen::Matrix<float, 3, 3>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; RhsType = const Eigen::Matrix<float, 3, 3>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; RhsType = const Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:692:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::rowIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:701:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::colIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:652:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 9]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>; Func = Eigen::internal::assign_op<float, float>]	1
ProductEvaluators.h:159:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::add_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::add_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Options = 0; Scalar = float]	2
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>; Func = Eigen::internal::assign_op<float, float>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
DenseBase.h:235:11:constexpr Eigen::Index Eigen::DenseBase<Derived>::innerSize() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 3; int Stop = 9]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 3]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Options = 0]	1
CoreEvaluators.h:217:11:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::Scalar& Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; Rhs = const Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 3; int Stop = 9]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 0]	1
ProductEvaluators.h:406:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::addTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>]	4
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Matrix<float, 3, 1> >::~evaluator()	1
CoreEvaluators.h:497:8:Eigen::internal::evaluator<Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > > >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<float, 3, 1> > >::~evaluator()	1
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>, 4, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 4; int Stop = 9]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>]	1
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
ProductEvaluators.h:107:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Options = 0; int ProductTag = 3; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape]	1
CoreEvaluators.h:147:9:constexpr Eigen::Index Eigen::internal::plainobjectbase_evaluator_data<Scalar, OuterStride>::outerStride() const [with Scalar = float; int OuterStride = 3]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>; Rhs = const Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:202:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
CoreEvaluators.h:202:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 3>]	1
BinaryFunctors.h:42:53:Eigen::internal::scalar_sum_op<LhsScalar, RhsScalar>::result_type Eigen::internal::scalar_sum_op<LhsScalar, RhsScalar>::operator()(const LhsScalar&, const RhsScalar&) const [with LhsScalar = float; RhsScalar = float]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 4; int Stop = 9]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>]	1
CoreEvaluators.h:163:8:Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<float, 1, 1> > >::~evaluator()	1
CoreEvaluators.h:273:8:Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >::~evaluator()	1
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>, 4, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>; Func = Eigen::internal::add_assign_op<float, float>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>]	4
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
Transpose.h:446:17:static void Eigen::internal::checkTransposeAliasing_impl<Derived, OtherDerived, false>::run(const Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<float, 3, 3>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:356:53:static void Eigen::internal::dense_assignment_loop<Kernel, 0, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 5; int Stop = 9]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 1>; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
CoreEvaluators.h:279:3:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator() [with Scalar = float; int Rows = 3; int Cols = 3; int Options = 1; int MaxRows = 3; int MaxCols = 3]	1
Matrix.h:337:5:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T0&, const T1&) [with T0 = int; T1 = int; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 1; int _MaxRows = 3; int _MaxCols = 3]	1
CoreEvaluators.h:282:12:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator(const XprType&) [with Scalar = float; int Rows = 3; int Cols = 3; int Options = 1; int MaxRows = 3; int MaxCols = 3]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 3, 1, 3, 3>; Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 5; int Stop = 9]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Matrix<float, 1, 1>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>; Functor = Eigen::internal::add_assign_op<float, float>; Weak = void]	1
Transpose.h:446:17:static void Eigen::internal::checkTransposeAliasing_impl<Derived, OtherDerived, false>::run(const Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<float, 3, 3>; OtherDerived = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:356:53:static void Eigen::internal::dense_assignment_loop<Kernel, 0, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int ProductTag = 4]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 9]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 6; int Stop = 9]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 1>; int ProductTag = 3]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 3]	1
CoreEvaluators.h:188:3:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator() [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
PlainObjectBase.h:476:25:Eigen::PlainObjectBase<Derived>::PlainObjectBase() [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
PlainObjectBase.h:968:37:static void Eigen::PlainObjectBase<Derived>::_check_template_params() [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
PlainObjectBase.h:803:30:void Eigen::PlainObjectBase<Derived>::_init2(Eigen::Index, Eigen::Index, typename Eigen::internal::enable_if<(typename Eigen::internal::dense_xpr_base<Derived>::type::SizeAtCompileTime != 2), T0>::type*) [with T0 = int; T1 = int; Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
CoreEvaluators.h:195:12:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator(const PlainObjectType&) [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3, 1, 3, 3>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>; Func = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 6; int Stop = 9]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int ProductTag = 4]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 3]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>]	1
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>, 4, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>; Functor = Eigen::internal::add_assign_op<float, float>]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>; int ProductTag = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 9]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1>]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Matrix<float, 3, 1>; Rhs = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
AssignEvaluator.h:664:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 9]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 7; int Stop = 9]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1>]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 3]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
DenseStorage.h:211:23:Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::DenseStorage() [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 1]	1
PlainObjectBase.h:271:30:void Eigen::PlainObjectBase<Derived>::resize(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	4
PlainObjectBase.h:247:57:const Scalar* Eigen::PlainObjectBase<Derived>::data() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
DenseCoeffsBase.h:585:18:constexpr Eigen::Index Eigen::DenseCoeffsBase<Derived, 3>::outerStride() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3, 1, 3, 3>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 7; int Stop = 9]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1>]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; _Scalar = float; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1]	1
CoreEvaluators.h:282:12:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator(const XprType&) [with Scalar = float; int Rows = 1; int Cols = 1; int Options = 0; int MaxRows = 1; int MaxCols = 1]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 3]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 1]	1
AssignEvaluator.h:750:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>; Functor = Eigen::internal::add_assign_op<float, float>]	2
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >; Functor = Eigen::internal::add_assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >, Eigen::internal::add_assign_op<float, float>, 0>]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1>]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
AssignEvaluator.h:664:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 9]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Matrix<float, 3, 1>; Rhs = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:692:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::rowIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:701:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::colIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:652:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 9]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 8; int Stop = 9]	1
ProductEvaluators.h:614:25:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index) const [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 1>; int ProductTag = 3]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 3]	1
DenseStorage.h:49:3:Eigen::internal::plain_array<T, Size, MatrixOrArrayOptions, Alignment>::plain_array() [with T = float; int Size = 9; int MatrixOrArrayOptions = 1; int Alignment = 0]	1
DenseStorage.h:265:28:void Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::resize(Eigen::Index, Eigen::Index, Eigen::Index) [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 1]	1
DenseStorage.h:266:32:const T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() const [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 1]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
Matrix.h:429:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::outerStride() const [with _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 1; int _MaxRows = 3; int _MaxCols = 3]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>]	1
PlainObjectBase.h:143:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
PlainObjectBase.h:145:11:constexpr Eigen::Index Eigen::PlainObjectBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3, 1, 3, 3>; Src = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>]	4
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<float, 3, 3> > >::~evaluator()	1
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3, 1, 3, 3>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 8; int Stop = 9]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; OtherDerived = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; Derived = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:195:12:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator(const PlainObjectType&) [with Derived = Eigen::Matrix<float, 1, 1>]	1
ProductEvaluators.h:614:25:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index) const [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; int ProductTag = 4]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 3]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int ProductTag = 4]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >, Eigen::internal::add_assign_op<float, float>, 0>; int Index = 0; int Stop = 3]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:692:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::rowIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:701:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::colIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:652:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 9]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Matrix<float, 3, 1>; Rhs = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
ProductEvaluators.h:604:63:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int ProductTag = 4]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 3; int Stop = 9]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 9]	1
blockmethods.h:1125:13:Eigen::DenseBase<Derived>::ConstRowXpr Eigen::DenseBase<Derived>::row(Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 3>]	1
Transpose.h:195:1:Eigen::DenseBase<Derived>::ConstTransposeReturnType Eigen::DenseBase<Derived>::transpose() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
blockmethods.h:1104:13:Eigen::DenseBase<Derived>::ConstColXpr Eigen::DenseBase<Derived>::col(Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 1>]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 1>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 3]	1
DenseBase.h:235:11:constexpr Eigen::Index Eigen::DenseBase<Derived>::innerSize() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
DenseStorage.h:262:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::rows() [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 1]	1
DenseStorage.h:263:52:static constexpr Eigen::Index Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::cols() [with T = float; int Size = 9; int _Rows = 3; int _Cols = 3; int _Options = 1]	1
Transpose.h:446:17:static void Eigen::internal::checkTransposeAliasing_impl<Derived, OtherDerived, false>::run(const Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>; OtherDerived = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 3, 1, 3, 3>; SrcXprType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>; T1 = float; T2 = float]	5
EigenBase.h:52:19:Derived& Eigen::EigenBase<Derived>::const_cast_derived() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:356:53:static void Eigen::internal::dense_assignment_loop<Kernel, 0, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
AssignEvaluator.h:219:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 0>, const Eigen::Matrix<float, 3, 3> > >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 9]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Derived = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; Derived = Eigen::Matrix<float, 1, 1>]	1
PlainObjectBase.h:247:57:const Scalar* Eigen::PlainObjectBase<Derived>::data() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Matrix<float, 1, 1>]	1
blockmethods.h:1125:13:Eigen::DenseBase<Derived>::ConstRowXpr Eigen::DenseBase<Derived>::row(Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 1>]	1
Transpose.h:195:1:Eigen::DenseBase<Derived>::ConstTransposeReturnType Eigen::DenseBase<Derived>::transpose() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
blockmethods.h:1104:13:Eigen::DenseBase<Derived>::ConstColXpr Eigen::DenseBase<Derived>::col(Eigen::Index) const [with Derived = Eigen::Matrix<float, 1, 1>]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 3]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1>]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; _Scalar = float; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >; Functor = Eigen::internal::add_assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >, Eigen::internal::add_assign_op<float, float>, 0>; int Index = 1; int Stop = 3]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Derived = Eigen::Matrix<float, 3, 3>]	1
ProductEvaluators.h:604:63:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Rhs = Eigen::Matrix<float, 3, 3>; int ProductTag = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 3; int Stop = 9]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 1>; RhsType = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
Block.h:181:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::BlockImpl_dense(const Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>&) [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false; bool HasDirectAccess = false]	1
Block.h:161:5:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(const Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>&) [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:111:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(const Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>&) [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
blockmethods.h:1125:13:Eigen::DenseBase<Derived>::ConstRowXpr Eigen::DenseBase<Derived>::row(Eigen::Index) const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
Transpose.h:66:5:Eigen::Transpose<MatrixType>::Transpose(const Eigen::Transpose<MatrixType>&) [with MatrixType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
Transpose.h:195:1:Eigen::DenseBase<Derived>::ConstTransposeReturnType Eigen::DenseBase<Derived>::transpose() const [with Derived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
blockmethods.h:1104:13:Eigen::DenseBase<Derived>::ConstColXpr Eigen::DenseBase<Derived>::col(Eigen::Index) const [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 1> >]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 4; int Stop = 9]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>, Eigen::Matrix<float, 1, 3> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Matrix<float, 3, 3>, 1, 3, false, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> > >::~evaluator()	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>, Eigen::Matrix<float, 3, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Matrix<float, 3, 1>, 3, 1, true, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int ProductTag = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 9]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Func = Eigen::internal::assign_op<float, float>]	1
EigenBase.h:46:12:Derived& Eigen::EigenBase<Derived>::derived() [with Derived = Eigen::Matrix<float, 1, 1>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 1, 1>; Src = Eigen::Inverse<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; Func = Eigen::internal::assign_op<float, float>]	1
DenseStorage.h:266:32:const T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() const [with T = float; int Size = 1; int _Rows = 1; int _Cols = 1; int _Options = 0]	1
Matrix.h:429:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::outerStride() const [with _Scalar = float; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	3
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>, Eigen::Matrix<float, 1, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Matrix<float, 3, 1>, 1, 1, false, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> > >::~evaluator()	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>, Eigen::Matrix<float, 1, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Matrix<float, 1, 1>, 1, 1, true, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	2
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 1, 1>]	1
ProductEvaluators.h:614:25:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index) const [with Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; int ProductTag = 4]	1
AssignmentFunctors.h:49:46:void Eigen::internal::add_assign_op<DstScalar, SrcScalar>::assignCoeff(DstScalar&, const SrcScalar&) const [with DstScalar = float; SrcScalar = float]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >, Eigen::internal::add_assign_op<float, float>, 0>; int Index = 2; int Stop = 3]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; Func = Eigen::internal::assign_op<float, float>]	1
blockmethods.h:1104:13:Eigen::DenseBase<Derived>::ConstColXpr Eigen::DenseBase<Derived>::col(Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 3>]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 4; int Stop = 9]	1
CoreEvaluators.h:514:30:Eigen::internal::evaluator<Eigen::CwiseNullaryOp<NullaryOp, PlainObjectType> >::evaluator(const XprType&) [with NullaryOp = Eigen::internal::scalar_constant_op<float>; PlainObjectType = const Eigen::Matrix<float, 3, 1>]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > > >::~evaluator()	1
CoreEvaluators.h:1099:8:Eigen::internal::unary_evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:1087:8:Eigen::internal::block_evaluator<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false, false>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> > >::~evaluator()	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>, Eigen::Matrix<float, 1, 1, 1, 1, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	2
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 5; int Stop = 9]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1>]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
AssignEvaluator.h:664:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 9]	1
ProductEvaluators.h:141:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Options = 0; Scalar = float]	4
InverseImpl.h:305:15:static void Eigen::internal::Assignment<DstXprType, Eigen::Inverse<Rhs>, Eigen::internal::assign_op<typename DstXprType::Scalar, typename SrcXprType::Scalar>, Eigen::internal::Dense2Dense>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<typename DstXprType::Scalar, typename SrcXprType::Scalar>&) [with DstXprType = Eigen::Matrix<float, 1, 1>; XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	4
DenseBase.h:235:11:constexpr Eigen::Index Eigen::DenseBase<Derived>::innerSize() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> > >]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Derived = Eigen::Matrix<float, 1, 1>]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >, 1> >, Eigen::internal::add_assign_op<float, float>, 0>; int Stop = 3]	1
ProductEvaluators.h:221:8:static void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >; InitialFunc = Eigen::internal::assign_op<float, float>; DstXprType = Eigen::Matrix<float, 3, 3>; OtherXpr = Eigen::Matrix<float, 3, 3>; ProductType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>; Func1 = Eigen::internal::assign_op<float, float>; Func2 = Eigen::internal::sub_assign_op<float, float>]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>, Eigen::Dense>::CwiseBinaryOpImpl()	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>, Eigen::Matrix<float, 3, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Matrix<float, 3, 3>, 3, 1, true, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	2
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 5; int Stop = 9]	1
CwiseNullaryOp.h:84:22:const NullaryOp& Eigen::CwiseNullaryOp<NullaryOp, MatrixType>::functor() const [with NullaryOp = Eigen::internal::scalar_constant_op<float>; PlainObjectType = const Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
Block.h:219:36:Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::cols() const [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false; bool HasDirectAccess = false]	1
Block.h:218:36:Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::rows() const [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false; bool HasDirectAccess = false]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> > >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 6; int Stop = 9]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >; int Start = 0; int Length = 3]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:692:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::rowIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:701:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::colIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:652:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 9]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 1>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
PlainObjectBase.h:271:30:void Eigen::PlainObjectBase<Derived>::resize(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 1, 1>]	4
Inverse.h:60:49:const XprTypeNestedCleaned& Eigen::Inverse<XprType>::nestedExpression() const [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
Matrix.h:329:14:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; _Scalar = float; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1]	1
InverseImpl.h:43:22:static void Eigen::internal::compute_inverse<MatrixType, ResultType, 1>::run(const MatrixType&, ResultType&) [with MatrixType = Eigen::Matrix<float, 1, 1>; ResultType = Eigen::Matrix<float, 1, 1>]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
EigenBase.h:67:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::size() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> > >; int Start = 0]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; Func = Eigen::internal::assign_op<float, float>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 3>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 3, 3>; RhsType = const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>]	1
AssignmentFunctors.h:69:3:Eigen::internal::sub_assign_op<DstScalar, SrcScalar>::sub_assign_op() [with DstScalar = float; SrcScalar = float]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0>; Func = Eigen::internal::sub_assign_op<float, float>]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 6; int Stop = 9]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
Block.h:188:12:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false; bool HasDirectAccess = false]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> > >; int Start = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 7; int Stop = 9]	1
Matrix.h:427:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::innerStride() const [with _Scalar = float; int _Rows = 3; int _Cols = 3; int _Options = 0; int _MaxRows = 3; int _MaxCols = 3]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	5
XprHelper.h:146:52:Eigen::internal::variable_if_dynamic<T, -1>::variable_if_dynamic(T) [with T = int]	1
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	1
Matrix.h:427:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::innerStride() const [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	5
XprHelper.h:133:52:Eigen::internal::variable_if_dynamic<T, Value>::variable_if_dynamic(T) [with T = int; int Value = 0]	1
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >; int Start = 0]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >; int Start = 1; int Length = 2]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Derived = Eigen::Matrix<float, 3, 3>]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
CoreEvaluators.h:217:11:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::Scalar& Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeffRef(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 3, 3, 1, 3, 3>]	1
ProductEvaluators.h:604:63:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int ProductTag = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 3; int Stop = 9]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>; Func = Eigen::internal::assign_op<float, float>]	1
DenseStorage.h:265:28:void Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::resize(Eigen::Index, Eigen::Index, Eigen::Index) [with T = float; int Size = 1; int _Rows = 1; int _Cols = 1; int _Options = 0]	1
PlainObjectBase.h:882:30:void Eigen::PlainObjectBase<Derived>::_init1(const Eigen::DenseBase<ElseDerived>&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; Derived = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:202:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Matrix<float, 1, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Matrix.h:427:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::innerStride() const [with _Scalar = float; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
ProductEvaluators.h:221:8:static void Eigen::internal::assignment_from_xpr_op_product<DstXprType, OtherXpr, ProductType, Func1, Func2>::run(DstXprType&, const SrcXprType&, const InitialFunc&) [with SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 1, 1>, const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0> >; InitialFunc = Eigen::internal::assign_op<float, float>; DstXprType = Eigen::Matrix<float, 1, 1>; OtherXpr = Eigen::Matrix<float, 1, 1>; ProductType = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>; Func1 = Eigen::internal::assign_op<float, float>; Func2 = Eigen::internal::sub_assign_op<float, float>]	1
ProductEvaluators.h:174:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::Matrix<float, 1, 3>; int Options = 0; Scalar = float]	2
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 0; int Length = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 7; int Stop = 9]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
Transpose.h:142:19:const Scalar* Eigen::TransposeImpl<MatrixType, Eigen::Dense>::data() const [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
Transpose.h:129:11:Eigen::Index Eigen::TransposeImpl<MatrixType, Eigen::Dense>::innerStride() const [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
Transpose.h:131:11:Eigen::Index Eigen::TransposeImpl<MatrixType, Eigen::Dense>::outerStride() const [with MatrixType = Eigen::Matrix<float, 3, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 8; int Stop = 9]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>; Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>; Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >; int Start = 1]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true> > >; int Start = 2]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>; Func = Eigen::internal::assign_op<float, float>]	1
blockmethods.h:1104:13:Eigen::DenseBase<Derived>::ConstColXpr Eigen::DenseBase<Derived>::col(Eigen::Index) const [with Derived = Eigen::Transpose<Eigen::Matrix<float, 3, 3> >]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 4; int Stop = 9]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
PlainObjectBase.h:790:34:Derived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; Derived = Eigen::Matrix<float, 1, 1>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>; Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>; Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 1, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 1, 1>; Src = Eigen::Matrix<float, 1, 1>; Func = Eigen::internal::assign_op<float, float>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_difference_op<float, float>; LhsType = const Eigen::Matrix<float, 1, 1>; RhsType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 1, 1>; Src = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 1>, 0>; Func = Eigen::internal::sub_assign_op<float, float>]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 0]	1
ProductEvaluators.h:413:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::Matrix<float, 1, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 0]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 1; int Length = 2]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 8; int Stop = 9]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>; Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
AssignEvaluator.h:219:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 9]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
ProductEvaluators.h:141:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 0; Scalar = float]	4
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>, Eigen::Dense>::CwiseBinaryOpImpl()	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>, Eigen::Matrix<float, 3, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	2
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 5; int Stop = 9]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 1>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>]	1
CoreEvaluators.h:163:8:Eigen::internal::evaluator<Eigen::PlainObjectBase<Eigen::Matrix<float, 1, 3> > >::~evaluator()	1
CoreEvaluators.h:273:8:Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >::~evaluator()	1
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; Func = Eigen::internal::assign_op<float, float>]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
CoreEvaluators.h:323:19:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
BinaryFunctors.h:80:53:Eigen::internal::scalar_product_op<LhsScalar, RhsScalar>::result_type Eigen::internal::scalar_product_op<LhsScalar, RhsScalar>::operator()(const LhsScalar&, const RhsScalar&) const [with LhsScalar = float; RhsScalar = float]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 1, 1>; SrcXprType = Eigen::Matrix<float, 1, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
ProductEvaluators.h:174:8:static void Eigen::internal::Assignment<DstXprType, Eigen::Product<Lhs, Rhs, Options>, Eigen::internal::sub_assign_op<Scalar, Scalar>, Eigen::internal::Dense2Dense, typename Eigen::internal::enable_if<((Options == Eigen::DefaultProduct) || (Options == Eigen::AliasFreeProduct))>::type>::run(DstXprType&, const SrcXprType&, const Eigen::internal::sub_assign_op<Scalar, Scalar>&) [with DstXprType = Eigen::Matrix<float, 1, 1>; Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 1>; int Options = 0; Scalar = float]	2
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 1, 3>; Derived = Eigen::Matrix<float, 3, 1>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>; Func = Eigen::internal::sub_assign_op<float, float>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 1]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 2]	1
AssignEvaluator.h:219:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float, float>, const Eigen::Matrix<float, 3, 3>, const Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 0> >, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 9]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:323:19:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CoreEvaluators.h:323:19:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 3, 3>; Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 3>]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 6; int Stop = 9]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Matrix<float, 1, 3>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 1>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 1, 1>; Src = Eigen::Matrix<float, 1, 1>]	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 1, 1>; SrcXprType = Eigen::Matrix<float, 1, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 1>; int Option = 0]	1
ProductEvaluators.h:261:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::subTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 1, 1>; Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 1>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1, 4>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>; Functor = Eigen::internal::sub_assign_op<float, float>; Weak = void]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
XprHelper.h:135:7:static constexpr T Eigen::internal::variable_if_dynamic<T, Value>::value() [with T = int; int Value = 0]	1
CoreEvaluators.h:1121:19:Eigen::internal::unary_evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::Matrix<float, 3, 3>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>; Func = Eigen::internal::assign_op<float, float>]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >; int Start = 0; int Length = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 7; int Stop = 9]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int ProductTag = 3]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 3]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 1, 1>; Src = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
ProductEvaluators.h:96:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, 6, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Matrix<float, 1, 1> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; Functor = Eigen::internal::assign_op<float, float>]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 1, 1>; SrcXprType = Eigen::Matrix<float, 1, 1>; T1 = float; T2 = float]	5
EigenBase.h:52:19:Derived& Eigen::EigenBase<Derived>::const_cast_derived() const [with Derived = Eigen::Matrix<float, 1, 1>]	1
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
Transpose.h:195:1:Eigen::DenseBase<Derived>::ConstTransposeReturnType Eigen::DenseBase<Derived>::transpose() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 1>; Derived = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>]	4
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>, 4, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>; Functor = Eigen::internal::sub_assign_op<float, float>]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
XprHelper.h:147:45:T Eigen::internal::variable_if_dynamic<T, -1>::value() const [with T = int]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Matrix<float, 3, 1>; Rhs = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
Transpose.h:142:19:const Scalar* Eigen::TransposeImpl<MatrixType, Eigen::Dense>::data() const [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
Transpose.h:129:11:Eigen::Index Eigen::TransposeImpl<MatrixType, Eigen::Dense>::innerStride() const [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
Transpose.h:131:11:Eigen::Index Eigen::TransposeImpl<MatrixType, Eigen::Dense>::outerStride() const [with MatrixType = Eigen::Matrix<float, 3, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >; int Start = 0]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >; int Start = 1; int Length = 2]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 8; int Stop = 9]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1>]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 3]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = const Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 1, 1>; SrcXprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, Eigen::internal::assign_op<float, float>, 0>]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 1]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = const Eigen::Matrix<float, 1, 3>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = const Eigen::Matrix<float, 1, 3>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = const Eigen::Matrix<float, 1, 3>]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = const Eigen::Matrix<float, 1, 3>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; RhsType = const Eigen::Matrix<float, 3, 1>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; RhsType = const Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Matrix<float, 1, 3> >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Matrix<float, 1, 3> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> > >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	2
Transpose.h:446:17:static void Eigen::internal::checkTransposeAliasing_impl<Derived, OtherDerived, false>::run(const Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<float, 3, 3>; OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::Matrix<float, 1, 3>; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 1]	1
AssignEvaluator.h:750:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>; Functor = Eigen::internal::sub_assign_op<float, float>]	2
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >; Functor = Eigen::internal::sub_assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:356:53:static void Eigen::internal::dense_assignment_loop<Kernel, 0, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Matrix<float, 3, 1>; Rhs = const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:202:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:524:19:Eigen::internal::evaluator<Eigen::CwiseNullaryOp<NullaryOp, PlainObjectType> >::CoeffReturnType Eigen::internal::evaluator<Eigen::CwiseNullaryOp<NullaryOp, PlainObjectType> >::coeff(IndexType, IndexType) const [with IndexType = int; NullaryOp = Eigen::internal::scalar_constant_op<float>; PlainObjectType = const Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 3, 1, true>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 3, 3>; Src = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>]	4
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>; Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >; int Start = 1]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false> > >; int Start = 2]	1
AssignEvaluator.h:219:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3, 1, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 9]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = Eigen::Matrix<float, 1, 3>]	1
ProductEvaluators.h:614:25:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index) const [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int ProductTag = 3]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 3]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = const Eigen::Matrix<float, 1, 1>]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 1]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Matrix<float, 1, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 1, 1>, 1, 1, true>]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 1]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; RhsType = const Eigen::Matrix<float, 3, 1>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::Matrix<float, 1, 3>; int ProductTag = 4]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 0; int Stop = 9]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 1> >, 1, 1, false>]	1
CoreEvaluators.h:401:48:Scalar Eigen::internal::nullary_wrapper<Scalar, NullaryOp, true, false, false>::operator()(const NullaryOp&, IndexType, IndexType) const [with IndexType = int; Scalar = float; NullaryOp = Eigen::internal::scalar_constant_op<float>]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	1
Transpose.h:446:17:static void Eigen::internal::checkTransposeAliasing_impl<Derived, OtherDerived, false>::run(const Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<float, 3, 3>; OtherDerived = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 3, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>; T1 = float; T2 = float]	5
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:356:53:static void Eigen::internal::dense_assignment_loop<Kernel, 0, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:282:12:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator(const XprType&) [with Scalar = float; int Rows = 1; int Cols = 3; int Options = 1; int MaxRows = 1; int MaxCols = 3]	1
blockmethods.h:1104:13:Eigen::DenseBase<Derived>::ConstColXpr Eigen::DenseBase<Derived>::col(Eigen::Index) const [with Derived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 1> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 3]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = const Eigen::Matrix<float, 1, 1>]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 1> >, Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>, const Eigen::Matrix<float, 1, 1> > >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 1]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:226:11:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::Scalar& Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeffRef(Eigen::Index) [with Derived = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:211:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index) const [with Derived = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; Rhs = const Eigen::Matrix<float, 3, 1>]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >; int Start = 0; int Length = 3]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 1>; _Rhs = Eigen::Matrix<float, 1, 3>; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1>]	1
AssignEvaluator.h:664:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >; Functor = Eigen::internal::sub_assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 1; int Stop = 9]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:1093:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, false>::block_evaluator(const XprType&) [with ArgType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
NullaryFunctors.h:21:54:const Scalar Eigen::internal::scalar_constant_op<Scalar>::operator()() const [with Scalar = float]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int ProductTag = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 9]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:195:12:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator(const PlainObjectType&) [with Derived = Eigen::Matrix<float, 1, 3>]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>, Eigen::Dense>::CwiseBinaryOpImpl()	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>, Eigen::Matrix<float, 3, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	2
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; RhsType = const Eigen::Matrix<float, 1, 1>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; RhsType = const Eigen::Matrix<float, 1, 1>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; LhsType = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; RhsType = const Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:773:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = const Eigen::Matrix<float, 1, 1>]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; Rhs = const Eigen::Matrix<float, 3, 1>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >; int Start = 0]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >; int Start = 1; int Length = 2]	1
AssignEvaluator.h:692:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::rowIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >; Functor = Eigen::internal::sub_assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:701:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::colIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >; Functor = Eigen::internal::sub_assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:652:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >; Functor = Eigen::internal::sub_assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 2; int Stop = 9]	1
Block.h:307:18:constexpr Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::StorageIndex Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::startRow() const [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false; bool HasDirectAccess = false]	1
Block.h:313:18:constexpr Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::StorageIndex Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::startCol() const [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false; bool HasDirectAccess = false]	1
CoreEvaluators.h:1105:12:Eigen::internal::unary_evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Matrix<float, 3, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = false]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false>]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 3, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
AssignEvaluator.h:664:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeffByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 9]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
PlainObjectBase.h:247:57:const Scalar* Eigen::PlainObjectBase<Derived>::data() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Matrix<float, 1, 3>]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Options = 0]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Lhs = const Eigen::Product<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 0>; Rhs = const Eigen::Matrix<float, 1, 1>]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Matrix<float, 3, 1>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; Rhs = const Eigen::Matrix<float, 3, 1>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >; int Start = 1]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >, const Eigen::Matrix<float, 3, 1> > >; int Start = 2]	1
ProductEvaluators.h:604:63:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Matrix<float, 3, 1>; Rhs = Eigen::Matrix<float, 1, 3>; int ProductTag = 4]	1
AssignmentFunctors.h:70:46:void Eigen::internal::sub_assign_op<DstScalar, SrcScalar>::assignCoeff(DstScalar&, const SrcScalar&) const [with DstScalar = float; SrcScalar = float]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 3; int Stop = 9]	1
Block.h:298:63:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess>::nestedExpression() const [with XprType = const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false; bool HasDirectAccess = false]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >, 1, 1, false>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Matrix<float, 3, 1>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, const Eigen::Matrix<float, 3, 1> > >]	1
AssignEvaluator.h:692:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::rowIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:701:54:static Eigen::Index Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::colIndexByOuterInner(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:652:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index, Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 9]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
DenseStorage.h:266:32:const T* Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::data() const [with T = float; int Size = 3; int _Rows = 1; int _Cols = 3; int _Options = 1]	1
Matrix.h:429:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::outerStride() const [with _Scalar = float; int _Rows = 1; int _Cols = 3; int _Options = 1; int _MaxRows = 1; int _MaxCols = 3]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >; int Start = 0; int Length = 3]	1
ProductEvaluators.h:107:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Options = 0; int ProductTag = 6; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; RhsType = const Eigen::Matrix<float, 3, 1>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; RhsType = const Eigen::Matrix<float, 3, 1>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; RhsType = const Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; Rhs = const Eigen::Matrix<float, 3, 1>]	1
blockmethods.h:1104:13:Eigen::DenseBase<Derived>::ConstColXpr Eigen::DenseBase<Derived>::col(Eigen::Index) const [with Derived = Eigen::Matrix<float, 1, 3>]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 4; int Stop = 9]	1
ProductEvaluators.h:604:63:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index, Eigen::Index) const [with Lhs = Eigen::Matrix<float, 3, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int ProductTag = 3]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 3; int Stop = 9]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 3, 3> >, 3, 1, false>]	1
DenseBase.h:235:11:constexpr Eigen::Index Eigen::DenseBase<Derived>::innerSize() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
Transpose.h:142:19:const Scalar* Eigen::TransposeImpl<MatrixType, Eigen::Dense>::data() const [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
Transpose.h:129:11:Eigen::Index Eigen::TransposeImpl<MatrixType, Eigen::Dense>::innerStride() const [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
Transpose.h:131:11:Eigen::Index Eigen::TransposeImpl<MatrixType, Eigen::Dense>::outerStride() const [with MatrixType = Eigen::Matrix<float, 1, 3>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >; int Start = 0]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >; int Start = 1; int Length = 2]	1
CoreEvaluators.h:279:3:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator() [with Scalar = float; int Rows = 1; int Cols = 1; int Options = 0; int MaxRows = 1; int MaxCols = 1]	1
Matrix.h:337:5:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T0&, const T1&) [with T0 = int; T1 = int; _Scalar = float; int _Rows = 1; int _Cols = 1; int _Options = 0; int _MaxRows = 1; int _MaxCols = 1]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; _Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int Option = 0]	1
ProductEvaluators.h:249:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 6>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 1, 1>; Lhs = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>; Rhs = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >; Rhs = const Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:323:19:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = const Eigen::Matrix<float, 1, 3>]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>, Eigen::Dense>::CwiseBinaryOpImpl()	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>, Eigen::Matrix<float, 1, 1, 1, 1, 1> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Matrix<float, 1, 3>, 1, 1, false, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	2
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 5; int Stop = 9]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 4; int Stop = 9]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
EigenBase.h:67:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::size() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
Matrix.h:427:18:constexpr Eigen::Index Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::innerStride() const [with _Scalar = float; int _Rows = 1; int _Cols = 3; int _Options = 1; int _MaxRows = 1; int _MaxCols = 3]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>; Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >; int Start = 1]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >, const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true> > >; int Start = 2]	1
CoreEvaluators.h:188:3:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator() [with Derived = Eigen::Matrix<float, 1, 1>]	1
PlainObjectBase.h:803:30:void Eigen::PlainObjectBase<Derived>::_init2(Eigen::Index, Eigen::Index, typename Eigen::internal::enable_if<(typename Eigen::internal::dense_xpr_base<Derived>::type::SizeAtCompileTime != 2), T0>::type*) [with T0 = int; T1 = int; Derived = Eigen::Matrix<float, 1, 1>]	1
Transpose.h:195:1:Eigen::DenseBase<Derived>::ConstTransposeReturnType Eigen::DenseBase<Derived>::transpose() const [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; Derived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:202:19:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::CoeffReturnType Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Matrix<float, 1, 3>]	1
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> > >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 6; int Stop = 9]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 5; int Stop = 9]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; RhsType = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, Eigen::Dense>::CwiseBinaryOpImpl()	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; RhsType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; RhsType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
ProductEvaluators.h:96:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	2
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = const Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Matrix<float, 1, 3>]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> > >; int Start = 0]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 7; int Stop = 9]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 6; int Stop = 9]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 1, 3, false> >; Rhs = const Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; RhsType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Index = 8; int Stop = 9]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 7; int Stop = 9]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >; int Start = 0; int Length = 3]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>; Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >, const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
AssignEvaluator.h:219:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 1>, Eigen::Matrix<float, 1, 3>, 1> >, Eigen::internal::sub_assign_op<float, float>, 0>; int Stop = 9]	1
AssignEvaluator.h:209:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 8; int Stop = 9]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>; PlainObjectType = Eigen::Matrix<float, 3, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >; int Start = 0]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >; int Start = 1; int Length = 2]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 3, 1>, 1, 1, false> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
AssignEvaluator.h:219:53:static void Eigen::internal::copy_using_evaluator_DefaultTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 3, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 9]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >; int BlockRows = 3; int BlockCols = 1; bool InnerPanel = true]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >, 3, 1, true>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >; int Start = 1]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >, const Eigen::Transpose<Eigen::Matrix<float, 1, 3> > > >; int Start = 2]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; RhsType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; RhsType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; RhsType = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >; Rhs = const Eigen::Transpose<Eigen::Matrix<float, 1, 3> >]	1
CoreEvaluators.h:323:19:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
CoreEvaluators.h:323:19:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>; PlainObjectType = Eigen::Matrix<float, 1, 1, 1, 1, 1>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 1; bool InnerPanel = false]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 1, false>]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 0>]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 0]	1
ProductEvaluators.h:107:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, Option>, ProductTag, LhsShape, RhsShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 0; int ProductTag = 3; LhsShape = Eigen::DenseShape; RhsShape = Eigen::DenseShape]	1
CoreEvaluators.h:279:3:Eigen::internal::evaluator<Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >::evaluator() [with Scalar = float; int Rows = 1; int Cols = 3; int Options = 1; int MaxRows = 1; int MaxCols = 3]	1
Matrix.h:337:5:Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T0&, const T1&) [with T0 = int; T1 = int; _Scalar = float; int _Rows = 1; int _Cols = 3; int _Options = 1; int _MaxRows = 1; int _MaxCols = 3]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 0]	1
ProductEvaluators.h:398:53:static void Eigen::internal::generic_product_impl<Lhs, Rhs, Eigen::DenseShape, Eigen::DenseShape, 3>::evalTo(Dst&, const Lhs&, const Rhs&) [with Dst = Eigen::Matrix<float, 1, 3>; Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 3>]	1
CoreEvaluators.h:188:3:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::evaluator() [with Derived = Eigen::Matrix<float, 1, 3>]	1
PlainObjectBase.h:803:30:void Eigen::PlainObjectBase<Derived>::_init2(Eigen::Index, Eigen::Index, typename Eigen::internal::enable_if<(typename Eigen::internal::dense_xpr_base<Derived>::type::SizeAtCompileTime != 2), T0>::type*) [with T0 = int; T1 = int; Derived = Eigen::Matrix<float, 1, 3>]	1
GeneralProduct.h:442:1:const Eigen::Product<Derived, OtherDerived, 1> Eigen::MatrixBase<Derived>::lazyProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Matrix<float, 3, 3>; Derived = Eigen::Matrix<float, 1, 3>]	1
AssignEvaluator.h:873:6:void Eigen::internal::call_assignment_no_alias(Dst&, const Src&, const Func&) [with Dst = Eigen::Matrix<float, 1, 3>; Src = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>; Func = Eigen::internal::assign_op<float, float>]	1
PlainObjectBase.h:271:30:void Eigen::PlainObjectBase<Derived>::resize(Eigen::Index, Eigen::Index) [with Derived = Eigen::Matrix<float, 1, 3>]	4
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
Product.h:120:7:Eigen::internal::dense_product_base<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1, 3>::dense_product_base()	1
Product.h:152:7:Eigen::ProductImpl<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1, Eigen::Dense>::ProductImpl()	1
Product.h:94:5:Eigen::Product<Lhs, Rhs, Option>::Product(const Lhs&, const Rhs&) [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
AssignEvaluator.h:948:35:static void Eigen::internal::Assignment<DstXprType, SrcXprType, Functor, Eigen::internal::Dense2Dense, Weak>::run(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 1, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>; Functor = Eigen::internal::assign_op<float, float>; Weak = void]	1
DenseStorage.h:265:28:void Eigen::DenseStorage<T, Size, _Rows, _Cols, _Options>::resize(Eigen::Index, Eigen::Index, Eigen::Index) [with T = float; int Size = 3; int _Rows = 1; int _Cols = 3; int _Options = 1]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
Transpose.h:452:6:void Eigen::internal::check_for_aliasing(const Dst&, const Src&) [with Dst = Eigen::Matrix<float, 1, 3>; Src = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
ProductEvaluators.h:491:8:Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::~product_evaluator()	1
ProductEvaluators.h:29:8:Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >::~evaluator()	1
AssignEvaluator.h:769:44:void Eigen::internal::call_dense_assignment_loop(DstXprType&, const SrcXprType&, const Functor&) [with DstXprType = Eigen::Matrix<float, 1, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>; Functor = Eigen::internal::assign_op<float, float>]	1
ProductEvaluators.h:35:50:Eigen::internal::evaluator<Eigen::Product<Lhs, Rhs, Option> >::evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int Options = 1]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
Product.h:102:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::rows() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
Product.h:104:11:constexpr Eigen::Index Eigen::Product<Lhs, Rhs, Option>::cols() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
AssignEvaluator.h:759:6:void Eigen::internal::resize_if_allowed(DstXprType&, const SrcXprType&, const Eigen::internal::assign_op<T1, T2>&) [with DstXprType = Eigen::Matrix<float, 1, 3>; SrcXprType = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>; T1 = float; T2 = float]	5
EigenBase.h:52:19:Derived& Eigen::EigenBase<Derived>::const_cast_derived() const [with Derived = Eigen::Matrix<float, 1, 3>]	1
AssignEvaluator.h:633:3:Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::generic_dense_assignment_kernel(Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstEvaluatorType&, const SrcEvaluatorType&, const Functor&, Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::DstXprType&) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:525:53:static void Eigen::internal::dense_assignment_loop<Kernel, 1, 2>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>]	1
ProductEvaluators.h:499:12:Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::product_evaluator(const XprType&) [with Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int ProductTag = 3]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 0; int Stop = 3]	1
Product.h:107:29:const LhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::lhs() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
Product.h:109:29:const RhsNestedCleaned& Eigen::Product<Lhs, Rhs, Option>::rhs() const [with _Lhs = Eigen::Matrix<float, 1, 3>; _Rhs = Eigen::Matrix<float, 3, 3>; int Option = 1]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1>]	1
AssignEvaluator.h:658:46:void Eigen::internal::generic_dense_assignment_kernel<DstEvaluatorTypeT, SrcEvaluatorTypeT, Functor, Version>::assignCoeff(Eigen::Index) [with DstEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >; SrcEvaluatorTypeT = Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >; Functor = Eigen::internal::assign_op<float, float>; int Version = 0]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 1; int Stop = 3]	1
CoreEvaluators.h:226:11:Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::Scalar& Eigen::internal::evaluator<Eigen::PlainObjectBase<Derived> >::coeffRef(Eigen::Index) [with Derived = Eigen::Matrix<float, 1, 3>]	1
ProductEvaluators.h:614:25:const CoeffReturnType Eigen::internal::product_evaluator<Eigen::Product<Lhs, Rhs, 1>, ProductTag, Eigen::DenseShape, Eigen::DenseShape>::coeff(Eigen::Index) const [with Lhs = Eigen::Matrix<float, 1, 3>; Rhs = Eigen::Matrix<float, 3, 3>; int ProductTag = 3]	1
AssignEvaluator.h:245:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Index, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Index = 2; int Stop = 3]	1
blockmethods.h:1125:13:Eigen::DenseBase<Derived>::ConstRowXpr Eigen::DenseBase<Derived>::row(Eigen::Index) const [with Derived = Eigen::Matrix<float, 1, 3>]	1
Transpose.h:195:1:Eigen::DenseBase<Derived>::ConstTransposeReturnType Eigen::DenseBase<Derived>::transpose() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
matrixcwisebinaryops.h:23:1:const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<typename Eigen::internal::traits<T>::Scalar, typename Eigen::internal::traits<OtherDerived>::Scalar>, const Derived, const OtherDerived> Eigen::MatrixBase<Derived>::cwiseProduct(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>; Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
EigenBase.h:60:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::rows() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
Redux.h:459:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::sum() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
AssignEvaluator.h:255:53:static void Eigen::internal::copy_using_evaluator_LinearTraversal_CompleteUnrolling<Kernel, Stop, Stop>::run(Kernel&) [with Kernel = Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 1, 3> >, Eigen::internal::evaluator<Eigen::Product<Eigen::Matrix<float, 1, 3>, Eigen::Matrix<float, 3, 3>, 1> >, Eigen::internal::assign_op<float, float>, 0>; int Stop = 3]	1
Block.h:118:5:Eigen::Block<XprType, BlockRows, BlockCols, InnerPanel>::Block(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	2
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
Transpose.h:157:5:Eigen::TransposeImpl<MatrixType, Eigen::Dense>::TransposeImpl() [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
Transpose.h:64:34:Eigen::Transpose<MatrixType>::Transpose(MatrixType&) [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CwiseBinaryOp.h:148:7:Eigen::CwiseBinaryOpImpl<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>, Eigen::Dense>::CwiseBinaryOpImpl()	1
Transpose.h:69:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::rows() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
Transpose.h:71:11:constexpr Eigen::Index Eigen::Transpose<MatrixType>::cols() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
CwiseBinaryOp.h:110:5:Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::CwiseBinaryOp(const Lhs&, const Rhs&, const BinaryOp&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	2
EigenBase.h:63:16:constexpr Eigen::EigenBase<Derived>::Index Eigen::EigenBase<Derived>::cols() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
EigenBase.h:49:18:const Derived& Eigen::EigenBase<Derived>::derived() const [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CwiseBinaryOp.h:120:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rows() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:884:8:Eigen::internal::mapbase_evaluator<Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>, Eigen::Matrix<float, 1, 3> >::~mapbase_evaluator()	1
CoreEvaluators.h:1214:8:Eigen::internal::block_evaluator<const Eigen::Matrix<float, 1, 3>, 1, 3, true, true>::~block_evaluator()	1
CoreEvaluators.h:1034:8:Eigen::internal::evaluator<Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >::~evaluator()	1
CoreEvaluators.h:305:8:Eigen::internal::unary_evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, Eigen::internal::IndexBased, float>::~unary_evaluator()	1
CoreEvaluators.h:90:8:Eigen::internal::evaluator<Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> > >::~evaluator()	1
CoreEvaluators.h:100:8:Eigen::internal::evaluator<const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> > >::~evaluator()	1
CoreEvaluators.h:797:10:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::Data::~Data()	1
CoreEvaluators.h:733:8:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >, Eigen::internal::IndexBased, Eigen::internal::IndexBased, float, float>::~binary_evaluator()	1
CoreEvaluators.h:722:8:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >::~evaluator()	1
Redux.h:357:7:Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >::~redux_evaluator()	1
Redux.h:409:1:typename Eigen::internal::traits<T>::Scalar Eigen::DenseBase<Derived>::redux(const Func&) const [with BinaryOp = Eigen::internal::scalar_sum_op<float, float>; Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	2
Block.h:162:43:Eigen::BlockImpl<XprType, BlockRows, BlockCols, InnerPanel, Eigen::Dense>::BlockImpl(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
MapBase.h:94:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::cols() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
MapBase.h:91:18:constexpr Eigen::Index Eigen::MapBase<Derived, 0>::rows() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
CwiseBinaryOp.h:125:11:constexpr Eigen::Index Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::cols() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:363:12:Eigen::internal::redux_evaluator<_XprType>::redux_evaluator(const XprType&) [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
CoreEvaluators.h:122:41:Eigen::internal::evaluator_base<ExpressionType>::~evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
Redux.h:220:10:static Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::Scalar Eigen::internal::redux_impl<Func, Evaluator, 0, 2>::run(const Evaluator&, const Func&, const XprType&) [with XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >; Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >]	1
Block.h:346:5:Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::BlockImpl_dense(XprType&, Eigen::Index) [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	1
CoreEvaluators.h:729:12:Eigen::internal::evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 0; int Length = 3]	1
MatrixBase.h:485:5:Eigen::MatrixBase<Derived>::MatrixBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
MapBase.h:173:12:Eigen::MapBase<Derived, 0>::MapBase(Eigen::MapBase<Derived, 0>::PointerType, Eigen::Index, Eigen::Index) [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	5
Block.h:431:10:void Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::init() [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	1
CoreEvaluators.h:758:12:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::binary_evaluator(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 0]	1
Redux.h:108:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, Length>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 1; int Length = 2]	1
DenseBase.h:681:23:Eigen::DenseBase<Derived>::DenseBase() [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
MapBase.h:205:10:void Eigen::MapBase<Derived, 0>::checkSanity(typename Eigen::internal::enable_if<(Eigen::internal::traits<OtherDerived>::Alignment == 0), void*>::type) const [with T = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>; Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
CoreEvaluators.h:800:5:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::Data(const XprType&) [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
Redux.h:380:19:Eigen::internal::redux_evaluator<_XprType>::CoeffReturnType Eigen::internal::redux_evaluator<_XprType>::coeffByOuterInner(Eigen::Index, Eigen::Index) const [with _XprType = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> >]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 1]	1
Redux.h:126:37:static Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::Scalar Eigen::internal::redux_novec_unroller<Func, Evaluator, Start, 1>::run(const Evaluator&, const Func&) [with Func = Eigen::internal::scalar_sum_op<float, float>; Evaluator = Eigen::internal::redux_evaluator<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >, const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true> > >; int Start = 2]	1
CwiseBinaryOp.h:138:21:const BinaryOp& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::functor() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CwiseBinaryOp.h:132:23:const _LhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::lhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CwiseBinaryOp.h:135:23:const _RhsNested& Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>::rhs() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; LhsType = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; RhsType = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
CoreEvaluators.h:767:19:Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:94:12:Eigen::internal::evaluator<T>::evaluator(const T&) [with T = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
CoreEvaluators.h:802:21:const BinaryOp& Eigen::internal::binary_evaluator<Eigen::CwiseBinaryOp<BinaryOp, Lhs, Rhs>, Eigen::internal::IndexBased, Eigen::internal::IndexBased>::Data::func() const [with BinaryOp = Eigen::internal::scalar_product_op<float, float>; Lhs = const Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >; Rhs = const Eigen::Block<const Eigen::Matrix<float, 3, 3>, 3, 1, true>]	1
CoreEvaluators.h:323:19:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::CoeffReturnType Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::coeff(Eigen::Index, Eigen::Index) const [with ArgType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
CoreEvaluators.h:317:12:Eigen::internal::unary_evaluator<Eigen::Transpose<Derived>, Eigen::internal::IndexBased>::unary_evaluator(const XprType&) [with ArgType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
CoreEvaluators.h:909:19:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::CoeffReturnType Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::coeff(Eigen::Index, Eigen::Index) const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
Transpose.h:76:5:const typename Eigen::internal::remove_all<typename Eigen::internal::ref_selector<T>::non_const_type>::type& Eigen::Transpose<MatrixType>::nestedExpression() const [with MatrixType = const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Transpose<const Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true> >]	1
CoreEvaluators.h:104:12:Eigen::internal::evaluator<const T>::evaluator(const T&) [with T = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
CoreEvaluators.h:967:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::colStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:963:9:constexpr Eigen::Index Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::rowStride() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
CoreEvaluators.h:1079:12:Eigen::internal::evaluator<Eigen::Block<ArgType, BlockRows, BlockCols, InnerPanel> >::evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	1
CoreEvaluators.h:1222:12:Eigen::internal::block_evaluator<ArgType, BlockRows, BlockCols, InnerPanel, true>::block_evaluator(const XprType&) [with ArgType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	1
CoreEvaluators.h:898:12:Eigen::internal::mapbase_evaluator<Derived, PlainObjectType>::mapbase_evaluator(const XprType&) [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>; PlainObjectType = Eigen::Matrix<float, 1, 3>]	1
MapBase.h:102:44:const Scalar* Eigen::MapBase<Derived, 0>::data() const [with Derived = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
Block.h:391:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::innerStride() const [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	1
Block.h:400:11:constexpr Eigen::Index Eigen::internal::BlockImpl_dense<XprType, BlockRows, BlockCols, InnerPanel, true>::outerStride() const [with XprType = const Eigen::Matrix<float, 1, 3>; int BlockRows = 1; int BlockCols = 3; bool InnerPanel = true]	1
CoreEvaluators.h:121:41:Eigen::internal::evaluator_base<ExpressionType>::evaluator_base() [with ExpressionType = Eigen::Block<const Eigen::Matrix<float, 1, 3>, 1, 3, true>]	1
main.cpp:2135:1:void __static_initialization_and_destruction_0(int, int)	3
main.cpp:2135:1:cpp)	1
